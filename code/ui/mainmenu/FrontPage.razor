@using Sandbox;
@using System.Linq;
@using System.Threading.Tasks;
@using Sandbox.Menu;
@using Sandbox.UI;

<root>
   
    <div class="controls">
        @if (Game.InGame)
        {
            <a class="button" onclick=@CloseMenu>Continue</a>
            <a class="button" onclick=@LeaveGame>Leave Server</a>
        }
        else
        {
            <a class="button" onclick="@CreateGame">Create Server</a>

            <a class="button" onclick="@OpenServerList">Join Server</a>
        }

        <a class="button" @onclick=@Game.Menu.Close>Quit Spleef</a>
    </div>
</root>

@code
{
    void CreateGame()
    {
        var options = new Sandbox.Modals.GameCreateModalOptions();
        options.Cookie = $"spleef.serverconfig";
        options.ModalTitle = "Create Server";
        options.MinPlayers = 2;
        options.MaxPlayers = Game.Menu.Package.GetMeta<int>("MaxPlayers", 2);
        options.MapSelection = false;
        options.Default.GameTitle = $"{Game.UserName}'s Spleef";
        options.Default.MaxPlayers = 10;

        options.OnStartGame = (setup) =>
        {
            Game.Menu.StartServerAsync(setup.MaxPlayers, setup.GameTitle, "facepunch.square");
        };

        Game.Overlay.ShowCreateGame(options);
    }

    void OpenServerList()
    {
        var options = new Sandbox.Modals.ServerListModalOptions();
        options.ModalTitle = "Spleef Servers";
        options.TargetGame = "thedimin.spleef";
        options.OnSelected = (server) =>
        {
            Game.Menu.ConnectToServer(server.SteamId);
        };

        Game.Overlay.ShowServerList(options);
    }

    void CloseMenu()
    {
        Game.Menu.HideMenu();
    }
    void LeaveGame()
    {
        Game.Menu.LeaveServer( "Leaving" );
    }
}